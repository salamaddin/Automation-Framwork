package Utils;

import java.awt.*;
import java.io.*;
import org.bytedeco.javacv.*;

public class ScreenRecorder {

    private static final int FRAME_RATE = 10; // Frames per second
    private final Rectangle screenBounds;
    private Robot robot;
    private FFmpegFrameRecorder recorder;

    public ScreenRecorder(String outputPath) throws AWTException, FrameRecorder.Exception {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        screenBounds = ge.getDefaultScreenDevice().getDefaultConfiguration().getBounds();
        robot = new Robot();

        // Setup FFmpegFrameRecorder
        recorder = new FFmpegFrameRecorder(outputPath, screenBounds.width, screenBounds.height);
        recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264);
        recorder.setFormat("mp4");
        recorder.setFrameRate(FRAME_RATE);
        recorder.start();
    }

    public void startRecording() throws FrameRecorder.Exception {
        long frameDelay = 1000 / FRAME_RATE;

        while (true) {
            long frameStartTime = System.currentTimeMillis();

            // Capture screen
            BufferedImage image = robot.createScreenCapture(screenBounds);

            // Convert BufferedImage to Frame
            Frame frame = new Java2DFrameConverter().convert(image);

            // Record frame
            recorder.record(frame);

            // Delay to maintain desired frame rate
            long elapsedTime = System.currentTimeMillis() - frameStartTime;
            long sleepTime = frameDelay - elapsedTime;
            if (sleepTime > 0) {
                try {
                    Thread.sleep(sleepTime);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }


}
