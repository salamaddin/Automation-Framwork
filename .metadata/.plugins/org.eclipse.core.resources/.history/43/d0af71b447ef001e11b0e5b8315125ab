package Utils;

import org.monte.media.Format;
import org.monte.media.FormatKeys.MediaType;
import org.monte.media.Registry;
import org.monte.media.math.Rational;
import org.monte.screenrecorder.ScreenRecorder;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import static org.monte.media.AudioFormatKeys.*;
import static org.monte.media.VideoFormatKeys.*;

public class ScreenRecorderUtil extends ScreenRecorder {
    private String name;

    public ScreenRecorderUtil(GraphicsConfiguration cfg, Rectangle captureArea, Format fileFormat,
                              Format screenFormat, Format mouseFormat, Format audioFormat, File movieFolder, String name)
            throws IOException, AWTException {
        super(cfg, captureArea, fileFormat, screenFormat, mouseFormat, audioFormat, movieFolder);
        this.name = name;
    }

    @Override
    protected File createMovieFile(Format fileFormat) throws IOException {
        if (!movieFolder.exists()) {
            movieFolder.mkdirs();
        } else if (!movieFolder.isDirectory()) {
            throw new IOException("\"" + movieFolder + "\" is not a directory.");
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH.mm.ss");
        return new File(movieFolder,
                name + "-" + dateFormat.format(new Date()) + "." + Registry.getInstance().getExtension(fileFormat));
    }

    public static void startRecord(String recordedVideoName) throws Exception {
        File file = new File("C:/Users/arka.sarkar/Desktop/Data/");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = screenSize.width;
        int height = screenSize.height;

        Rectangle captureSize = new Rectangle(0, 0, width, height);

        GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment().
                getDefaultScreenDevice()
                .getDefaultConfiguration();
        
        // Define the MIME type for MP4 format
        String MIME_MP4 = "video/mp4";
        
        // Initialize Format objects for MP4 format
        Format fileFormat = new Format(MediaTypeKey, MediaType.FILE, MimeTypeKey, MIME_MP4);
        Format screenFormat = new Format(MediaTypeKey, MediaType.VIDEO, EncodingKey, "H264", FrameRateKey,
                Rational.valueOf(15));

        // Create the ScreenRecorderUtil instance with MP4 format
        screenRecorder = new ScreenRecorderUtil(gc, captureSize, fileFormat, screenFormat, null, null, file,
                recordedVideoName);
        screenRecorder.start();
    }

    public static void stopRecord() throws Exception {
        screenRecorder.stop();
    }

    public static void deleteRecords() {
        File directory = new File("./test-recordings/");
        File[] files = directory.listFiles();
        for (File file : files) {
            file.delete();
        }
    }
}
